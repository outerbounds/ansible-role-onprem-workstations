---
- name: create /lib/security directory if it doesn't exist
  file:
    path: /lib/security
    state: directory

- name: get the latest release info from github
  ansible.builtin.uri:
    url: https://api.github.com/repos/outerbounds/pam-jwt/releases/latest
    return_content: true
  register: json_response

- name: download pam_jwt source code
  get_url:
    url: "{{ json_response.json.tarball_url }}"
    dest: /tmp/pam-jwt.tar
  check_mode: false

- name: create /tmp/pam-jwt if it doesn't exist
  file:
    path: /tmp/pam-jwt
    state: directory

- name: download go tar file
  get_url:
    url: https://go.dev/dl/go{{go_version}}.linux-amd64.tar.gz
    dest: /tmp/go{{go_version}}.linux-amd64.tar.gz
  check_mode: false

- name: extract and move new go folder to /tmp/pam-jwt
  ansible.builtin.unarchive:
    src: /tmp/go{{go_version}}.linux-amd64.tar.gz
    dest: /tmp/pam-jwt
    remote_src: true
  check_mode: false

- name: delete downloaded tar file
  shell: rm -rf /tmp/go{{go_version}}.linux-amd64.tar.gz
  check_mode: false

- name: unarchive pam_jwt source code
  ansible.builtin.unarchive:
    src: /tmp/pam-jwt.tar
    dest: /tmp/pam-jwt
    remote_src: true
  check_mode: false

- name: list /tmp/pam-jwt
  find:
    path: /tmp/pam-jwt
    patterns: "outerbounds-pam-jwt-*"
    recurse: no
    file_type: directory
  register: pam_dir
  check_mode: false

- name: build pam_jwt.so file
  shell:
    cmd: GOROOT=/tmp/pam-jwt/go GOPATH=$HOME/go PATH=$GOPATH/bin:$GOROOT/bin:$PATH make build
    chdir: "{{ pam_dir.files.0.path }}"
    creates: "{{ pam_dir.files.0.path }}/pam_jwt.so"
  check_mode: false

- name: copy pam_jwt.so file to destination
  copy:
    src: "{{ pam_dir.files.0.path }}/pam_jwt.so"
    dest: /lib/security/pam_jwt.so
    remote_src: true
    mode: '0644'
  check_mode: false

- name: remove /tmp/pam-jwt folder
  file:
    path: /tmp/pam-jwt
    state: absent
  check_mode: false

- name: add outerbounds PAM configuration
  ansible.builtin.template:
    src: sshd.tmpl
    dest: /etc/pam.d/sshd
    mode: '0644'
    backup: true

- name: enable password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication no$"
    line: "PasswordAuthentication yes"
    backup: true
    backrefs: true

- name: restart ssh service
  service:
    name: ssh
    state: restarted
